layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  transform_param {
    scale: 0.00392156862745
  }
  data_param {
    source: "/mnt/lustre/chendagui/deform_mnist/deform_train_lmdb/"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv11"
  type: "Convolution"
  bottom: "data"
  top: "conv11"
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu11"
  type: "ReLU"
  bottom: "conv11"
  top: "conv11"
}
layer {
  name: "bn11"
  type: "BatchNorm"
  bottom: "conv11"
  top: "bn11"
}
layer {
  name: "conv12"
  type: "Convolution"
  bottom: "bn11"
  top: "conv12"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu12"
  type: "ReLU"
  bottom: "conv12"
  top: "conv12"
}
layer {
  name: "bn12"
  type: "BatchNorm"
  bottom: "conv12"
  top: "bn12"
}
layer {
  name: "conv21"
  type: "Convolution"
  bottom: "bn12"
  top: "conv21"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu21"
  type: "ReLU"
  bottom: "conv21"
  top: "conv21"
}
layer {
  name: "bn21"
  type: "BatchNorm"
  bottom: "conv21"
  top: "bn21"
}
layer {
  name: "conv22"
  type: "Convolution"
  bottom: "bn21"
  top: "conv22"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu22"
  type: "ReLU"
  bottom: "conv22"
  top: "conv22"
}
layer {
  name: "bn22"
  type: "BatchNorm"
  bottom: "conv22"
  top: "bn22"
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "bn22"
  top: "pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "score"
  type: "InnerProduct"
  bottom: "pool"
  top: "score"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "label"
  top: "loss"
}
layer {
  name: "acc"
  type: "Accuracy"
  bottom: "score"
  bottom: "label"
  top: "acc"
  include {
    phase: TEST
  }
}
